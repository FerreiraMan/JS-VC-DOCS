get:
  summary: Get Stocks
  tags:
    - Product Information
  responses:
    '200':
      description: OK. The request was successful.
      content:
        application/json:
          schema:
            type: object
            x-examples:
              Example 1:
                products:
                  - id: 07c390ae-d58a-42a2-8ec6-5051bca18cab
                    sellerSku: '8682447314708'
                    globalStock: 100
                    lastStockUpdatedAt: '2020-05-28T19:37:03Z'
                nextToken: n1b6an-TQiCuu1V-9MYPJNpW_qKq_GM0a2r8KLlbw5cVkJDZ9O_nsf_E6IrvCI5C
                isLastPage: false
            properties:
              products:
                type: array
                description: List of products.
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: Product Sid.
                    sellerSku:
                      type: string
                      description: Product Seller SKU.
                    globalStock:
                      type: number
                      description: Global stock for the product
                    lastStockUpdatedAt:
                      type: string
                      format: date
                      description: Last update done by the seller to this product's stock
                  required:
                    - id
                    - sellerSku
                    - globalStock
                    - lastStockUpdatedAt
              nextToken:
                type: string
                description: Pagination token.
              isLastPage:
                type: boolean
                description: Indicates if there are more pages to iterate
            required:
              - products
          examples:
            Success Response - Payload Example:
              value:
                products:
                  - id: 07c390ae-d58a-42a2-8ec6-5051bca18cab
                    sellerSku: '8682447314708'
                    globalStock: 100
                    lastStockUpdatedAt: '2020-05-28T19:37:03Z'
                nextToken: n1b6an-TQiCuu1V-9MYPJNpW_qKq_GM0a2r8KLlbw5cVkJDZ9O_nsf_E6IrvCI5C
                isLastPage: false
    '400':
      description: Bad Request. There was a problem with the request payload. Either a field is missing or a field type is not compliant with the contract.
    '401':
      description: Unauthorized. The client could not be correctly authenticated.
    '403':
      description: Forbidden. The client is authenticated but does not have permission to the endpoint.
    '404':
      description: Not Found. The URL or resource doesn't exist.
    '405':
      description: Method Not Allowed. The requested HTTP method is not allowed for the endpoint.
    '500':
      description: Internal Server Error. An unexpected internal error has occurred in the server.
    '501':
      description: Not Implemented. The Global Order Feature is not enabled.
  operationId: get-catalog-stock
  description: |-
    Get Stock paginated.


    **Paginated:** Yes, by "Next token" approach (same as GOP "Get Orders" API).
  parameters:
    - schema:
        type: string
      in: header
      name: Authorization
      description: JWT Token generated by Keycloak and Application ID
      required: true
    - schema:
        type: string
      in: query
      name: token
    - schema:
        type: integer
        format: x64
        default: 10
      in: query
      name: size
      description: The number of desired records between 1 and 100.
    - schema:
        type: array
        items:
          type: string
      in: query
      name: productSids
      description: Product sids to filter in
  x-codeSamples:
    - lang: 'curl'
      source: 
        $ref: '../code-samples/curl/catalog@stock.txt'      
    - lang: 'python'
      source: 
        $ref: '../code-samples/python/catalog@stock.py'      
    - lang: 'java'
      source: 
        $ref: '../code-samples/java/catalog@stock.java'      
    - lang: 'go'
      source:  
        $ref: '../code-samples/go/catalog@stock.go'      
    - lang: 'php'
      source: 
        $ref: '../code-samples/php/catalog@stock.php'      